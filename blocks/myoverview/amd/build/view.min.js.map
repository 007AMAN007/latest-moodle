{"version":3,"sources":["../src/view.js"],"names":["TEMPLATES","COURSES_CARDS","COURSES_LIST","COURSES_SUMMARY","NOCOURSES","GROUPINGS","GROUPING_ALLINCLUDINGHIDDEN","GROUPING_ALL","GROUPING_INPROGRESS","GROUPING_FUTURE","GROUPING_PAST","GROUPING_FAVOURITES","GROUPING_HIDDEN","NUMCOURSES_PERPAGE","loadedPages","courseOffset","lastPage","lastLimit","namespace","getFilterValues","root","courseRegion","find","SELECTORS","courseView","region","display","attr","grouping","sort","displaycategories","customfieldname","customfieldvalue","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","persistentLimitKey","getMyCourses","filters","limit","Repository","getEnrolledCoursesByTimeline","offset","classification","getFavouriteIconContainer","courseId","FAVOURITE_ICON","getPagedContentContainer","index","getCourseId","hideFavouriteIcon","iconContainer","isFavouriteIcon","ICON_IS_FAVOURITE","addClass","Aria","hide","notFavourteIcon","ICON_NOT_FAVOURITE","removeClass","unhide","showFavouriteIcon","getAddFavouriteMenuItem","getRemoveFavouriteMenuItem","addToFavourites","removeAction","addAction","setCourseFavouriteState","then","success","PubSub","publish","CourseEvents","favorited","Notification","alert","catch","exception","removeFromFavourites","unfavorited","getHideCourseMenuItem","getShowCourseMenuItem","hideCourse","hideAction","showAction","setCourseHiddenState","hideElement","showCourse","status","updateUserPreferences","preferences","type","value","id","pagingBar","jumpto","parseInt","courseList","reducedCourse","courses","reduce","accumulator","current","push","newElement","slice","forEach","popElement","length","pagedContentContainer","PagedContentFactory","resetLastPageNumber","pagedContentPage","renderCourses","html","js","Templates","replaceNodeContents","page","remove","setFavouriteCourses","result","warnings","course","isfavourite","coursesData","currentTemplate","map","showcoursecategory","render","nocoursesimg","setLimit","registerPagedEventHandlers","event","PagedContentEvents","SET_ITEMS_PER_PAGE_LIMIT","subscribe","initializePagedContent","Math","random","pagingLimit","itemsPerPage","active","totalCourseCount","filter","pagingOption","config","eventNamespace","pagedContentPromise","createWithLimit","pagesData","actions","promises","pageData","currentPage","pageNumber","allItemsLoaded","pagePromise","nextPageStart","pageCourses","currentPageLength","remainingCourses","nextoffset","registerEventListeners","CustomEvents","define","events","activate","on","ACTION_ADD_FAVOURITE","e","data","favourite","target","closest","originalEvent","preventDefault","ACTION_REMOVE_FAVOURITE","ACTION_HIDE_COURSE","ACTION_SHOW_COURSE","init","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the courses view for the overview block.\n *\n * @copyright  2018 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Repository from 'block_myoverview/repository';\nimport * as PagedContentFactory from 'core/paged_content_factory';\nimport * as PubSub from 'core/pubsub';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport * as Notification from 'core/notification';\nimport * as Templates from 'core/templates';\nimport * as CourseEvents from 'core_course/events';\nimport SELECTORS from 'block_myoverview/selectors';\nimport * as PagedContentEvents from 'core/paged_content_events';\nimport * as Aria from 'core/aria';\n\nconst TEMPLATES = {\n    COURSES_CARDS: 'block_myoverview/view-cards',\n    COURSES_LIST: 'block_myoverview/view-list',\n    COURSES_SUMMARY: 'block_myoverview/view-summary',\n    NOCOURSES: 'core_course/no-courses'\n};\n\nconst GROUPINGS = {\n    GROUPING_ALLINCLUDINGHIDDEN: 'allincludinghidden',\n    GROUPING_ALL: 'all',\n    GROUPING_INPROGRESS: 'inprogress',\n    GROUPING_FUTURE: 'future',\n    GROUPING_PAST: 'past',\n    GROUPING_FAVOURITES: 'favourites',\n    GROUPING_HIDDEN: 'hidden'\n};\n\nconst NUMCOURSES_PERPAGE = [12, 24, 48, 96, 0];\n\nlet loadedPages = [];\n\nlet courseOffset = 0;\n\nlet lastPage = 0;\n\nlet lastLimit = 0;\n\nlet namespace = null;\n\n/**\n * Get filter values from DOM.\n *\n * @param {object} root The root element for the courses view.\n * @return {filters} Set filters.\n */\nconst getFilterValues = root => {\n    const courseRegion = root.find(SELECTORS.courseView.region);\n    return {\n        display: courseRegion.attr('data-display'),\n        grouping: courseRegion.attr('data-grouping'),\n        sort: courseRegion.attr('data-sort'),\n        displaycategories: courseRegion.attr('data-displaycategories'),\n        customfieldname: courseRegion.attr('data-customfieldname'),\n        customfieldvalue: courseRegion.attr('data-customfieldvalue'),\n    };\n};\n\n// We want the paged content controls below the paged content area.\n// and the controls should be ignored while data is loading.\nconst DEFAULT_PAGED_CONTENT_CONFIG = {\n    ignoreControlWhileLoading: true,\n    controlPlacementBottom: true,\n    persistentLimitKey: 'block_myoverview_user_paging_preference'\n};\n\n/**\n * Get enrolled courses from backend.\n *\n * @param {object} filters The filters for this view.\n * @param {int} limit The number of courses to show.\n * @return {promise} Resolved with an array of courses.\n */\nconst getMyCourses = (filters, limit) => {\n\n    return Repository.getEnrolledCoursesByTimeline({\n        offset: courseOffset,\n        limit: limit,\n        classification: filters.grouping,\n        sort: filters.sort,\n        customfieldname: filters.customfieldname,\n        customfieldvalue: filters.customfieldvalue\n    });\n};\n\n/**\n * Get the container element for the favourite icon.\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n * @return {Object} The favourite icon container\n */\nconst getFavouriteIconContainer = (root, courseId) => {\n    return root.find(SELECTORS.FAVOURITE_ICON + '[data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the paged content container element.\n *\n * @param {Object} root The course overview container\n * @param {Number} index Rendered page index.\n * @return {Object} The rendered paged container.\n */\nconst getPagedContentContainer = (root, index) => {\n    return root.find('[data-region=\"paged-content-page\"][data-page=\"' + index + '\"]');\n};\n\n/**\n * Get the course id from a favourite element.\n *\n * @param {Object} root The favourite icon container element.\n * @return {Number} Course id.\n */\nconst getCourseId = root => {\n    return root.attr('data-course-id');\n};\n\n/**\n * Hide the favourite icon.\n *\n * @param {Object} root The favourite icon container element.\n * @param {Number} courseId Course id number.\n */\nconst hideFavouriteIcon = (root, courseId) => {\n    const iconContainer = getFavouriteIconContainer(root, courseId);\n\n    const isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\n    isFavouriteIcon.addClass('hidden');\n    Aria.hide(isFavouriteIcon);\n\n    const notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\n    notFavourteIcon.removeClass('hidden');\n    Aria.unhide(notFavourteIcon);\n};\n\n/**\n * Show the favourite icon.\n *\n * @param {Object} root The course overview container.\n * @param {Number} courseId Course id number.\n */\nconst showFavouriteIcon = (root, courseId) => {\n    const iconContainer = getFavouriteIconContainer(root, courseId);\n\n    const isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\n    isFavouriteIcon.removeClass('hidden');\n    Aria.unhide(isFavouriteIcon);\n\n    const notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\n    notFavourteIcon.addClass('hidden');\n    Aria.hide(notFavourteIcon);\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The add to favourite menu item.\n */\nconst getAddFavouriteMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"add-favourite\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The remove from favourites menu item.\n */\nconst getRemoveFavouriteMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"remove-favourite\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Add course to favourites\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst addToFavourites = (root, courseId) => {\n    const removeAction = getRemoveFavouriteMenuItem(root, courseId);\n    const addAction = getAddFavouriteMenuItem(root, courseId);\n\n    setCourseFavouriteState(courseId, true).then(success => {\n        if (success) {\n            PubSub.publish(CourseEvents.favorited, courseId);\n            removeAction.removeClass('hidden');\n            addAction.addClass('hidden');\n            showFavouriteIcon(root, courseId);\n        } else {\n            Notification.alert('Starring course failed', 'Could not change favourite state');\n        }\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Remove course from favourites\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst removeFromFavourites = (root, courseId) => {\n    const removeAction = getRemoveFavouriteMenuItem(root, courseId);\n    const addAction = getAddFavouriteMenuItem(root, courseId);\n\n    setCourseFavouriteState(courseId, false).then(success => {\n        if (success) {\n            PubSub.publish(CourseEvents.unfavorited, courseId);\n            removeAction.addClass('hidden');\n            addAction.removeClass('hidden');\n            hideFavouriteIcon(root, courseId);\n        } else {\n            Notification.alert('Starring course failed', 'Could not change favourite state');\n        }\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The hide course menu item.\n */\nconst getHideCourseMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"hide-course\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The show course menu item.\n */\nconst getShowCourseMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"show-course\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Hide course\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst hideCourse = (root, courseId) => {\n    const hideAction = getHideCourseMenuItem(root, courseId);\n    const showAction = getShowCourseMenuItem(root, courseId);\n    const filters = getFilterValues(root);\n\n    setCourseHiddenState(courseId, true);\n\n    // Remove the course from this view as it is now hidden and thus not covered by this view anymore.\n    // Do only if we are not in \"All\" view mode where really all courses are shown.\n    if (filters.grouping !== GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\n        hideElement(root, courseId);\n    }\n\n    hideAction.addClass('hidden');\n    showAction.removeClass('hidden');\n};\n\n/**\n * Show course\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst showCourse = (root, courseId) => {\n    const hideAction = getHideCourseMenuItem(root, courseId);\n    const showAction = getShowCourseMenuItem(root, courseId);\n    const filters = getFilterValues(root);\n\n    setCourseHiddenState(courseId, null);\n\n    // Remove the course from this view as it is now shown again and thus not covered by this view anymore.\n    // Do only if we are not in \"All\" view mode where really all courses are shown.\n    if (filters.grouping !== GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\n        hideElement(root, courseId);\n    }\n\n    hideAction.removeClass('hidden');\n    showAction.addClass('hidden');\n};\n\n/**\n * Set the courses hidden status and push to repository\n *\n * @param {Number} courseId Course id to favourite.\n * @param {Boolean} status new hidden status.\n * @return {Promise} Repository promise.\n */\nconst setCourseHiddenState = (courseId, status) => {\n\n    // If the given status is not hidden, the preference has to be deleted with a null value.\n    if (status === false) {\n        status = null;\n    }\n    return Repository.updateUserPreferences({\n        preferences: [\n            {\n                type: 'block_myoverview_hidden_course_' + courseId,\n                value: status\n            }\n        ]\n    });\n};\n\n/**\n * Reset the loadedPages dataset to take into account the hidden element\n *\n * @param {Object} root The course overview container\n * @param {Number} id The course id number\n */\nconst hideElement = (root, id) => {\n    const pagingBar = root.find('[data-region=\"paging-bar\"]');\n    const jumpto = parseInt(pagingBar.attr('data-active-page-number'));\n\n    // Get a reduced dataset for the current page.\n    const courseList = loadedPages[jumpto];\n    let reducedCourse = courseList.courses.reduce((accumulator, current) => {\n        if (id !== current.id) {\n            accumulator.push(current);\n        }\n        return accumulator;\n    }, []);\n\n    // Get the next page's data if loaded and pop the first element from it.\n    if (loadedPages[jumpto + 1] !== undefined) {\n        const newElement = loadedPages[jumpto + 1].courses.slice(0, 1);\n\n        // Adjust the dataset for the reset of the pages that are loaded.\n        loadedPages.forEach((courseList, index) => {\n            if (index > jumpto) {\n                let popElement = [];\n                if (loadedPages[index + 1] !== undefined) {\n                    popElement = loadedPages[index + 1].courses.slice(0, 1);\n                }\n\n                loadedPages[index].courses = [...loadedPages[index].courses.slice(1), ...popElement];\n            }\n        });\n\n        reducedCourse = [...reducedCourse, ...newElement];\n    }\n\n    // Check if the next page is the last page and if it still has data associated to it.\n    if (lastPage === jumpto + 1 && loadedPages[jumpto + 1].courses.length === 0) {\n        const pagedContentContainer = root.find('[data-region=\"paged-content-container\"]');\n        PagedContentFactory.resetLastPageNumber($(pagedContentContainer).attr('id'), jumpto);\n    }\n\n    loadedPages[jumpto].courses = reducedCourse;\n\n    // Reduce the course offset.\n    courseOffset--;\n\n    // Render the paged content for the current.\n    const pagedContentPage = getPagedContentContainer(root, jumpto);\n    renderCourses(root, loadedPages[jumpto]).then((html, js) => {\n        return Templates.replaceNodeContents(pagedContentPage, html, js);\n    }).catch(Notification.exception);\n\n    // Delete subsequent pages in order to trigger the callback.\n    loadedPages.forEach((courseList, index) => {\n        if (index > jumpto) {\n            const page = getPagedContentContainer(root, index);\n            page.remove();\n        }\n    });\n};\n\n/**\n * Set the courses favourite status and push to repository\n *\n * @param {Number} courseId Course id to favourite.\n * @param {boolean} status new favourite status.\n * @return {Promise} Repository promise.\n */\nconst setCourseFavouriteState = (courseId, status) => {\n\n    return Repository.setFavouriteCourses({\n        courses: [\n            {\n                'id': courseId,\n                'favourite': status\n            }\n        ]\n    }).then(result => {\n        if (result.warnings.length === 0) {\n            loadedPages.forEach(courseList => {\n                courseList.courses.forEach((course, index) => {\n                    if (course.id === courseId) {\n                        courseList.courses[index].isfavourite = status;\n                    }\n                });\n            });\n            return true;\n        } else {\n            return false;\n        }\n    }).catch(Notification.exception);\n};\n\n/**\n * Render the dashboard courses.\n *\n * @param {object} root The root element for the courses view.\n * @param {array} coursesData containing array of returned courses.\n * @return {promise} jQuery promise resolved after rendering is complete.\n */\nconst renderCourses = (root, coursesData) => {\n\n    const filters = getFilterValues(root);\n\n    let currentTemplate = '';\n    if (filters.display === 'card') {\n        currentTemplate = TEMPLATES.COURSES_CARDS;\n    } else if (filters.display === 'list') {\n        currentTemplate = TEMPLATES.COURSES_LIST;\n    } else {\n        currentTemplate = TEMPLATES.COURSES_SUMMARY;\n    }\n\n    // Whether the course category should be displayed in the course item.\n    coursesData.courses = coursesData.courses.map(course => {\n        course.showcoursecategory = filters.displaycategories === 'on';\n        return course;\n    });\n\n    if (coursesData.courses.length) {\n        return Templates.render(currentTemplate, {\n            courses: coursesData.courses,\n        });\n    } else {\n        const nocoursesimg = root.find(SELECTORS.courseView.region).attr('data-nocoursesimg');\n        return Templates.render(TEMPLATES.NOCOURSES, {\n            nocoursesimg: nocoursesimg\n        });\n    }\n};\n\n/**\n * Return the callback to be passed to the subscribe event\n *\n * @param {object} root The root element for the courses view\n * @return {function} Partially applied function that'll execute when passed a limit\n */\nconst setLimit = root => {\n    // @param {Number} limit The paged limit that is passed through the event.\n    return limit => root.find(SELECTORS.courseView.region).attr('data-paging', limit);\n};\n/**\n * Intialise the paged list and cards views on page load.\n * Returns an array of paged contents that we would like to handle here\n *\n * @param {object} root The root element for the courses view\n * @param {string} namespace The namespace for all the events attached\n */\nconst registerPagedEventHandlers = (root, namespace) => {\n    const event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\n    PubSub.subscribe(event, setLimit(root));\n};\n\n/**\n * Intialise the courses list and cards views on page load.\n *\n * @param {object} root The root element for the courses view.\n */\nconst initializePagedContent = root => {\n    namespace = \"block_myoverview_\" + root.attr('id') + \"_\" + Math.random();\n\n    const pagingLimit = parseInt(root.find(SELECTORS.courseView.region).attr('data-paging'), 10);\n    let itemsPerPage = NUMCOURSES_PERPAGE.map(value => {\n        let active = false;\n        if (value === pagingLimit) {\n            active = true;\n        }\n\n        return {\n            value: value,\n            active: active\n        };\n    });\n\n    // Filter out all pagination options which are too large for the amount of courses user is enrolled in.\n    const totalCourseCount = parseInt(root.find(SELECTORS.courseView.region).attr('data-totalcoursecount'), 10);\n    itemsPerPage = itemsPerPage.filter(pagingOption => {\n        return pagingOption.value < totalCourseCount || pagingOption.value === 0;\n    });\n\n    const filters = getFilterValues(root);\n    const config = {...{}, ...DEFAULT_PAGED_CONTENT_CONFIG};\n    config.eventNamespace = namespace;\n\n    const pagedContentPromise = PagedContentFactory.createWithLimit(\n        itemsPerPage,\n        (pagesData, actions) => {\n            let promises = [];\n\n            pagesData.forEach(pageData => {\n                const currentPage = pageData.pageNumber;\n                let limit = (pageData.limit > 0) ? pageData.limit : 0;\n\n                // Reset local variables if limits have changed.\n                if (lastLimit !== limit) {\n                    loadedPages = [];\n                    courseOffset = 0;\n                    lastPage = 0;\n                }\n\n                if (lastPage === currentPage) {\n                    // If we are on the last page and have it's data then load it from cache.\n                    actions.allItemsLoaded(lastPage);\n                    promises.push(renderCourses(root, loadedPages[currentPage]));\n                    return;\n                }\n\n                lastLimit = limit;\n\n                // Get 2 pages worth of data as we will need it for the hidden functionality.\n                if (loadedPages[currentPage + 1] === undefined) {\n                    if (loadedPages[currentPage] === undefined) {\n                        limit *= 2;\n                    }\n                }\n\n                const pagePromise = getMyCourses(\n                    filters,\n                    limit\n                ).then(coursesData => {\n                    let courses = coursesData.courses;\n                    let nextPageStart = 0;\n                    let pageCourses = [];\n\n                    // If current page's data is loaded make sure we max it to page limit.\n                    if (loadedPages[currentPage] !== undefined) {\n                        pageCourses = loadedPages[currentPage].courses;\n                        const currentPageLength = pageCourses.length;\n                        if (currentPageLength < pageData.limit) {\n                            nextPageStart = pageData.limit - currentPageLength;\n                            pageCourses = [...loadedPages[currentPage].courses, ...courses.slice(0, nextPageStart)];\n                        }\n                    } else {\n                        // When the page limit is zero, there is only one page of courses, no start for next page.\n                        nextPageStart = pageData.limit || false;\n                        pageCourses = (pageData.limit > 0) ? courses.slice(0, pageData.limit) : courses;\n                    }\n\n                    // Finished setting up the current page.\n                    loadedPages[currentPage] = {\n                        courses: pageCourses\n                    };\n\n                    // Set up the next page (if there is more than one page).\n                    const remainingCourses = nextPageStart !== false ? courses.slice(nextPageStart, courses.length) : [];\n                    if (remainingCourses.length) {\n                        loadedPages[currentPage + 1] = {\n                            courses: remainingCourses\n                        };\n                    }\n\n                    // Set the last page to either the current or next page.\n                    if (loadedPages[currentPage].courses.length < pageData.limit || !remainingCourses.length) {\n                        lastPage = currentPage;\n                        actions.allItemsLoaded(currentPage);\n                    } else if (loadedPages[currentPage + 1] !== undefined\n                        && loadedPages[currentPage + 1].courses.length < pageData.limit) {\n                        lastPage = currentPage + 1;\n                    }\n\n                    courseOffset = coursesData.nextoffset;\n                    return renderCourses(root, loadedPages[currentPage]);\n                }).catch(Notification.exception);\n\n                promises.push(pagePromise);\n            });\n\n            return promises;\n        },\n        config\n    );\n\n    pagedContentPromise.then((html, js) => {\n        registerPagedEventHandlers(root, namespace);\n        return Templates.replaceNodeContents(root.find(SELECTORS.courseView.region), html, js);\n    }).catch(Notification.exception);\n};\n\n/**\n * Listen to, and handle events for the myoverview block.\n *\n * @param {Object} root The myoverview block container element.\n */\nconst registerEventListeners = root => {\n    CustomEvents.define(root, [\n        CustomEvents.events.activate\n    ]);\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_ADD_FAVOURITE, (e, data) => {\n        const favourite = $(e.target).closest(SELECTORS.ACTION_ADD_FAVOURITE);\n        const courseId = getCourseId(favourite);\n        addToFavourites(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_REMOVE_FAVOURITE, (e, data) => {\n        const favourite = $(e.target).closest(SELECTORS.ACTION_REMOVE_FAVOURITE);\n        const courseId = getCourseId(favourite);\n        removeFromFavourites(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.FAVOURITE_ICON, (e, data) => {\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_HIDE_COURSE, (e, data) => {\n        const target = $(e.target).closest(SELECTORS.ACTION_HIDE_COURSE);\n        const courseId = getCourseId(target);\n        hideCourse(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_SHOW_COURSE, (e, data) => {\n        const target = $(e.target).closest(SELECTORS.ACTION_SHOW_COURSE);\n        const courseId = getCourseId(target);\n        showCourse(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n};\n\n/**\n * Intialise the courses list and cards views on page load.\n *\n * @param {object} root The root element for the courses view.\n */\nexport const init = root => {\n    root = $(root);\n    loadedPages = [];\n    lastPage = 0;\n    courseOffset = 0;\n\n    initializePagedContent(root);\n\n    if (!root.attr('data-init')) {\n        registerEventListeners(root);\n        root.attr('data-init', true);\n    }\n};\n\n/**\n\n * Reset the courses views to their original\n * state on first page load.courseOffset\n *\n * This is called when configuration has changed for the event lists\n * to cause them to reload their data.\n *\n * @param {Object} root The root element for the timeline view.\n */\nexport const reset = root => {\n    if (loadedPages.length > 0) {\n        loadedPages.forEach((courseList, index) => {\n            let pagedContentPage = getPagedContentContainer(root, index);\n            renderCourses(root, courseList).then((html, js) => {\n                return Templates.replaceNodeContents(pagedContentPage, html, js);\n            }).catch(Notification.exception);\n        });\n    } else {\n        init(root);\n    }\n};\n"],"file":"view.min.js"}