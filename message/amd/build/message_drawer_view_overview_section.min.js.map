{"version":3,"sources":["../src/message_drawer_view_overview_section.js"],"names":["define","$","CustomEvents","Notification","PubSub","Str","Pending","Templates","UserDate","MessageRepository","MessageDrawerEvents","MessageDrawerRouter","MessageDrawerRoutes","LazyLoadList","MessageDrawerViewConversationContants","SELECTORS","TOGGLE","CONVERSATION","BLOCKED_ICON_CONTAINER","LAST_MESSAGE","LAST_MESSAGE_DATE","MUTED_ICON_CONTAINER","UNREAD_COUNT","SECTION_TOTAL_COUNT","SECTION_TOTAL_COUNT_CONTAINER","SECTION_UNREAD_COUNT","PLACEHOLDER_CONTAINER","TEMPLATES","CONVERSATIONS_LIST","CONVERSATIONS_LIST_ITEMS_PLACEHOLDER","LOAD_LIMIT","loadedConversationsById","loadedTotalCounts","loadedUnreadCounts","isVisible","root","getRoot","hasClass","setExpanded","addClass","setCollapsed","removeClass","renderTotalCount","count","container","find","countElement","text","get_string","done","string","attr","numPlaceholders","placeholders","Array","apply","map","render","then","html","placeholderContainer","catch","renderUnreadCount","formatConversationFromEvent","conversation","recursivelyLowercaseKeys","object","Object","keys","reduce","carry","key","isArray","toLowerCase","formatted","messages","message","useridfrom","userfrom","id","conversations","userId","pending","formatMessagePreview","lastMessage","Promise","resolve","isMedia","includes","messagePreview","pix","label","labelPromise","pixPromise","renderPix","all","labelResult","pixResult","exception","mapPromises","length","formattedConversation","imageurl","name","subname","unreadcount","ismuted","lastmessagedate","timecreated","sentfromcurrentuser","lastmessage","otherUser","type","CONVERSATION_TYPES","SELF","members","PRIVATE","member","userid","showonlinestatus","isonline","isblocked","PUBLIC","lastsendername","fullname","formattedConversations","forEach","Date","toDateString","istoday","js","Deferred","error","getLoadCallback","types","includeFavourites","offset","includeSelfConversations","nonSelfConversationTypes","filter","candidate","getConversations","response","slice","setLoadedAll","getTotalConversationCountElement","getTotalUnreadConversationCountElement","incrementTotalConversationCount","element","parseInt","decrementTotalConversationCount","decrementTotalUnreadConversationCount","getConversationElement","conversationId","getConversationElementFromUserId","muteConversation","conversationElement","unmuteConversation","blockContact","unblockContact","createNewConversationFromEvent","existingConversations","listRoot","showContent","hideEmptyMessage","contentContainer","getContentContainer","prepend","deleteConversation","remove","hideContent","showEmptyMessage","markConversationAsRead","unreadCount","registerEventListeners","namespace","loadCallback","fromPanel","conversationBelongsToThisSection","conversationType","indexOf","isFavourite","toggle","css","outerHeight","on","show","append","subscribe","CONTACT_BLOCKED","CONTACT_UNBLOCKED","CONVERSATION_SET_MUTED","CONVERSATION_UNSET_MUTED","CONVERSATION_NEW_LAST_MESSAGE","loggedInUserId","CONVERSATION_DELETED","CONVERSATION_READ","CONVERSATION_SET_FAVOURITE","CONVERSATION_UNSET_FAVOURITE","events","activate","e","data","target","closest","go","VIEW_CONVERSATION","originalEvent","preventDefault","header","body","footer","totalCountPromise","unreadCountPromise"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls a section of the overview page in the message drawer.\n *\n * @module     core_message/message_drawer_view_overview_section\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/custom_interaction_events',\n    'core/notification',\n    'core/pubsub',\n    'core/str',\n    'core/pending',\n    'core/templates',\n    'core/user_date',\n    'core_message/message_repository',\n    'core_message/message_drawer_events',\n    'core_message/message_drawer_router',\n    'core_message/message_drawer_routes',\n    'core_message/message_drawer_lazy_load_list',\n    'core_message/message_drawer_view_conversation_constants'\n],\nfunction(\n    $,\n    CustomEvents,\n    Notification,\n    PubSub,\n    Str,\n    Pending,\n    Templates,\n    UserDate,\n    MessageRepository,\n    MessageDrawerEvents,\n    MessageDrawerRouter,\n    MessageDrawerRoutes,\n    LazyLoadList,\n    MessageDrawerViewConversationContants\n) {\n\n    var SELECTORS = {\n        TOGGLE: '[data-region=\"toggle\"]',\n        CONVERSATION: '[data-conversation-id]',\n        BLOCKED_ICON_CONTAINER: '[data-region=\"contact-icon-blocked\"]',\n        LAST_MESSAGE: '[data-region=\"last-message\"]',\n        LAST_MESSAGE_DATE: '[data-region=\"last-message-date\"]',\n        MUTED_ICON_CONTAINER: '[data-region=\"muted-icon-container\"]',\n        UNREAD_COUNT: '[data-region=\"unread-count\"]',\n        SECTION_TOTAL_COUNT: '[data-region=\"section-total-count\"]',\n        SECTION_TOTAL_COUNT_CONTAINER: '[data-region=\"section-total-count-container\"]',\n        SECTION_UNREAD_COUNT: '[data-region=\"section-unread-count\"]',\n        PLACEHOLDER_CONTAINER: '[data-region=\"placeholder-container\"]'\n    };\n\n    var TEMPLATES = {\n        CONVERSATIONS_LIST: 'core_message/message_drawer_conversations_list',\n        CONVERSATIONS_LIST_ITEMS_PLACEHOLDER: 'core_message/message_drawer_conversations_list_items_placeholder'\n    };\n\n    var LOAD_LIMIT = 50;\n    var loadedConversationsById = {};\n    var loadedTotalCounts = false;\n    var loadedUnreadCounts = false;\n\n    /**\n     * Get the section visibility status.\n     *\n     * @param  {Object} root The section container element.\n     * @return {Bool} Is section visible.\n     */\n    var isVisible = function(root) {\n        return LazyLoadList.getRoot(root).hasClass('show');\n    };\n\n    /**\n     * Set this section as expanded.\n     *\n     * @param  {Object} root The section container element.\n     */\n    var setExpanded = function(root) {\n        root.addClass('expanded');\n    };\n\n    /**\n     * Set this section as collapsed.\n     *\n     * @param  {Object} root The section container element.\n     */\n    var setCollapsed = function(root) {\n        root.removeClass('expanded');\n    };\n\n    /**\n     * Render the total count value and show it for the user. Also update the placeholder\n     * HTML for better visuals.\n     *\n     * @param {Object} root The section container element.\n     * @param {Number} count The total count\n     */\n    var renderTotalCount = function(root, count) {\n        var container = root.find(SELECTORS.SECTION_TOTAL_COUNT_CONTAINER);\n        var countElement = container.find(SELECTORS.SECTION_TOTAL_COUNT);\n        countElement.text(count);\n        container.removeClass('hidden');\n        Str.get_string('totalconversations', 'core_message', count).done(function(string) {\n            container.attr('aria-label', string);\n        });\n\n        var numPlaceholders = count > 20 ? 20 : count;\n        // Array of \"true\" up to the number of placeholders we want.\n        var placeholders = Array.apply(null, Array(numPlaceholders)).map(function() {\n            return true;\n        });\n\n        // Replace the current placeholder (loading spinner) with some nicer placeholders that\n        // better represent the content.\n        Templates.render(TEMPLATES.CONVERSATIONS_LIST_ITEMS_PLACEHOLDER, {placeholders: placeholders})\n            .then(function(html) {\n                var placeholderContainer = root.find(SELECTORS.PLACEHOLDER_CONTAINER);\n                placeholderContainer.html(html);\n                return;\n            })\n            .catch(function() {\n                // Silently ignore. Doesn't matter if we can't render the placeholders.\n            });\n    };\n\n    /**\n     * Render the unread count value and show it for the user if it's higher than zero.\n     *\n     * @param {Object} root The section container element.\n     * @param {Number} count The unread count\n     */\n    var renderUnreadCount = function(root, count) {\n        var countElement = root.find(SELECTORS.SECTION_UNREAD_COUNT);\n        countElement.text(count);\n\n        Str.get_string('unreadconversations', 'core_message', count).done(function(string) {\n            countElement.attr('aria-label', string);\n        });\n\n        if (count > 0) {\n            countElement.removeClass('hidden');\n        }\n    };\n\n    /**\n     * Create a formatted conversation object from the the one we get from events. The new object\n     * will be in a format that matches what we receive from the server.\n     *\n     * @param {Object} conversation\n     * @return {Object} formatted conversation.\n     */\n    var formatConversationFromEvent = function(conversation) {\n        // Recursively lowercase all of the keys for an object.\n        var recursivelyLowercaseKeys = function(object) {\n            return Object.keys(object).reduce(function(carry, key) {\n                if ($.isArray(object[key])) {\n                    carry[key.toLowerCase()] = object[key].map(recursivelyLowercaseKeys);\n                } else {\n                    carry[key.toLowerCase()] = object[key];\n                }\n\n                return carry;\n            }, {});\n        };\n\n        // Recursively lowercase all of the keys for the conversation.\n        var formatted = recursivelyLowercaseKeys(conversation);\n\n        // Make sure all messages have the useridfrom property set.\n        formatted.messages = formatted.messages.map(function(message) {\n            message.useridfrom = message.userfrom.id;\n            return message;\n        });\n\n        return formatted;\n    };\n\n    /**\n     * Render the messages in the overview page.\n     *\n     * @param {Object} contentContainer Conversations content container.\n     * @param {Array} conversations List of conversations to render.\n     * @param {Number} userId Logged in user id.\n     * @return {Object} jQuery promise.\n     */\n    var render = function(conversations, userId) {\n\n        // Helper to format the last message for rendering.\n        // Returns a promise which resolves to either a string, or null\n        // (such as in the event of an empty personal space).\n        var pending = new Pending();\n        var formatMessagePreview = function(lastMessage) {\n            if (!lastMessage) {\n                return new Promise(function(resolve) {\n                    resolve(null);\n                });\n            }\n            var isMedia = lastMessage.text.includes('src');\n\n            if (!isMedia) {\n                // Try to get the text value of the content.\n                // If that's not possible, we'll report it under the catch-all 'other media'.\n                var messagePreview = $(lastMessage.text).text();\n                if (messagePreview) {\n                    return new Promise(function(resolve) {\n                        resolve(messagePreview);\n                    });\n                }\n            }\n\n            // As a fallback, report unknowns as 'other media' type content.\n            var pix = 'i/messagecontentmultimediageneral';\n            var label = 'messagecontentmultimediageneral';\n\n            if (lastMessage.text.includes('<img')) {\n                pix = 'i/messagecontentimage';\n                label = 'messagecontentimage';\n            } else if (lastMessage.text.includes('<video')) {\n                pix = 'i/messagecontentvideo';\n                label = 'messagecontentvideo';\n            } else if (lastMessage.text.includes('<audio')) {\n                pix = 'i/messagecontentaudio';\n                label = 'messagecontentaudio';\n            }\n\n            var labelPromise = Str.get_string(label, 'core_message');\n            var pixPromise = labelPromise.then(function(string) {\n                return Templates.renderPix(pix, 'core', string);\n            });\n            return Promise.all([labelPromise, pixPromise])\n                .then(function([labelResult, pixResult]) {\n                    return pixResult + ' ' + labelResult;\n                }).catch(Notification.exception);\n        };\n\n        var mapPromises = conversations.map(function(conversation) {\n\n            var lastMessage = conversation.messages.length ? conversation.messages[conversation.messages.length - 1] : null;\n\n            return formatMessagePreview(lastMessage)\n                .then(function(messagePreview) {\n                    var formattedConversation = {\n                        id: conversation.id,\n                        imageurl: conversation.imageurl,\n                        name: conversation.name,\n                        subname: conversation.subname,\n                        unreadcount: conversation.unreadcount,\n                        ismuted: conversation.ismuted,\n                        lastmessagedate: lastMessage ? lastMessage.timecreated : null,\n                        sentfromcurrentuser: lastMessage ? lastMessage.useridfrom == userId : null,\n                        lastmessage: messagePreview\n                    };\n\n                    var otherUser = null;\n                    if (conversation.type == MessageDrawerViewConversationContants.CONVERSATION_TYPES.SELF) {\n                        // Self-conversations have only one member.\n                        otherUser = conversation.members[0];\n                    } else if (conversation.type == MessageDrawerViewConversationContants.CONVERSATION_TYPES.PRIVATE) {\n                        // For private conversations, remove the current userId from the members to get the other user.\n                        otherUser = conversation.members.reduce(function(carry, member) {\n                            if (!carry && member.id != userId) {\n                                carry = member;\n                            }\n                            return carry;\n                        }, null);\n                    }\n\n                    if (otherUser !== null) {\n                        formattedConversation.userid = otherUser.id;\n                        formattedConversation.showonlinestatus = otherUser.showonlinestatus;\n                        formattedConversation.isonline = otherUser.isonline;\n                        formattedConversation.isblocked = otherUser.isblocked;\n                    }\n\n                    if (conversation.type == MessageDrawerViewConversationContants.CONVERSATION_TYPES.PUBLIC) {\n                        formattedConversation.lastsendername = conversation.members.reduce(function(carry, member) {\n                            if (!carry && lastMessage && member.id == lastMessage.useridfrom) {\n                                carry = member.fullname;\n                            }\n                            return carry;\n                        }, null);\n                    }\n\n                    return formattedConversation;\n                }).catch(Notification.exception);\n        });\n\n        return Promise.all(mapPromises)\n            .then(function(formattedConversations) {\n                formattedConversations.forEach(function(conversation) {\n                    if (new Date().toDateString() == new Date(conversation.lastmessagedate * 1000).toDateString()) {\n                        conversation.istoday = true;\n                    }\n                });\n\n                return Templates.render(TEMPLATES.CONVERSATIONS_LIST, {conversations: formattedConversations});\n            }).then(function(html, js) {\n                pending.resolve();\n                return $.Deferred().resolve(html, js);\n            }).catch(function(error) {\n                pending.resolve();\n                Notification.exception(error);\n            });\n    };\n\n    /**\n     * Build the callback to load conversations.\n     *\n     * @param  {Array|null} types The conversation types for this section.\n     * @param  {bool} includeFavourites Include/exclude favourites.\n     * @param  {Number} offset Result offset\n     * @return {Function}\n     */\n    var getLoadCallback = function(types, includeFavourites, offset) {\n        // Note: This function is a bit messy because we've added the concept of loading\n        // multiple conversations types (e.g. private + self) at once but haven't properly\n        // updated the web service to accept an array of types. Instead we've added a new\n        // parameter for the self type which means we can only ever load self + other type.\n        // This should be improved to make it more extensible in the future. Adding new params\n        // for each type isn't very scalable.\n        var type = null;\n        // Include self conversations in the results by default.\n        var includeSelfConversations = true;\n        if (types && types.length) {\n            // Just get the conversation types that aren't \"self\" for now.\n            var nonSelfConversationTypes = types.filter(function(candidate) {\n                return candidate != MessageDrawerViewConversationContants.CONVERSATION_TYPES.SELF;\n            });\n            // If we're specifically asking for a list of types that doesn't include the self\n            // conversations then we don't need to include them.\n            includeSelfConversations = types.length != nonSelfConversationTypes.length;\n            // As mentioned above the webservice is currently limited to loading one type at a\n            // time (plus self conversations) so let's hope we never change this.\n            type = nonSelfConversationTypes[0];\n        }\n\n        return function(root, userId) {\n            return MessageRepository.getConversations(\n                    userId,\n                    type,\n                    LOAD_LIMIT + 1,\n                    offset,\n                    includeFavourites,\n                    includeSelfConversations\n                )\n                .then(function(response) {\n                    var conversations = response.conversations;\n\n                    if (conversations.length > LOAD_LIMIT) {\n                        conversations = conversations.slice(0, -1);\n                    } else {\n                        LazyLoadList.setLoadedAll(root, true);\n                    }\n\n                    offset = offset + LOAD_LIMIT;\n\n                    conversations.forEach(function(conversation) {\n                        loadedConversationsById[conversation.id] = conversation;\n                    });\n\n                    return conversations;\n                })\n                .catch(Notification.exception);\n        };\n    };\n\n    /**\n     * Get the total count container element.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @return {Object} Total count container element.\n     */\n    var getTotalConversationCountElement = function(root) {\n        return root.find(SELECTORS.SECTION_TOTAL_COUNT);\n    };\n\n    /**\n     * Get the unread conversations count container element.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @return {Object} Unread conversations count container element.\n     */\n    var getTotalUnreadConversationCountElement = function(root) {\n        return root.find(SELECTORS.SECTION_UNREAD_COUNT);\n    };\n\n    /**\n     * Increment the total conversations count.\n     *\n     * @param  {Object} root Overview messages container element.\n     */\n    var incrementTotalConversationCount = function(root) {\n        if (loadedTotalCounts) {\n            var element = getTotalConversationCountElement(root);\n            var count = parseInt(element.text());\n            count = count + 1;\n            element.text(count);\n        }\n    };\n\n    /**\n     * Decrement the total conversations count.\n     *\n     * @param  {Object} root Overview messages container element.\n     */\n    var decrementTotalConversationCount = function(root) {\n        if (loadedTotalCounts) {\n            var element = getTotalConversationCountElement(root);\n            var count = parseInt(element.text());\n            count = count - 1;\n            element.text(count);\n        }\n    };\n\n    /**\n     * Decrement the total unread conversations count.\n     *\n     * @param  {Object} root Overview messages container element.\n     */\n    var decrementTotalUnreadConversationCount = function(root) {\n        if (loadedUnreadCounts) {\n            var element = getTotalUnreadConversationCountElement(root);\n            var count = parseInt(element.text());\n            count = count - 1;\n            element.text(count);\n\n            if (count < 1) {\n                element.addClass('hidden');\n            }\n        }\n    };\n\n    /**\n     * Get a contact / conversation element.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @param  {Number} conversationId The conversation id.\n     * @return {Object} Conversation element.\n     */\n    var getConversationElement = function(root, conversationId) {\n        return root.find('[data-conversation-id=\"' + conversationId + '\"]');\n    };\n\n    /**\n     * Get a contact / conversation element from a user id.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @param  {Number} userId The user id.\n     * @return {Object} Conversation element.\n     */\n    var getConversationElementFromUserId = function(root, userId) {\n        return root.find('[data-user-id=\"' + userId + '\"]');\n    };\n\n    /**\n     * Show the conversation is muted icon.\n     *\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var muteConversation = function(conversationElement) {\n        conversationElement.find(SELECTORS.MUTED_ICON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the conversation is muted icon.\n     *\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var unmuteConversation = function(conversationElement) {\n        conversationElement.find(SELECTORS.MUTED_ICON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Show the contact is blocked icon.\n     *\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var blockContact = function(conversationElement) {\n        conversationElement.find(SELECTORS.BLOCKED_ICON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the contact is blocked icon.\n     *\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var unblockContact = function(conversationElement) {\n        conversationElement.find(SELECTORS.BLOCKED_ICON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Create an render new conversation element in the list of conversations.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @param  {Object} conversation The conversation.\n     * @param  {Number} userId The logged in user id.\n     * @return {Object} jQuery promise\n     */\n    var createNewConversationFromEvent = function(root, conversation, userId) {\n        var existingConversations = root.find(SELECTORS.CONVERSATION);\n\n        if (!existingConversations.length) {\n            // If we didn't have any conversations then we need to show\n            // the content of the list and hide the empty message.\n            var listRoot = LazyLoadList.getRoot(root);\n            LazyLoadList.showContent(listRoot);\n            LazyLoadList.hideEmptyMessage(listRoot);\n        }\n\n        // Cache the conversation.\n        loadedConversationsById[conversation.id] = conversation;\n\n        return render([conversation], userId)\n            .then(function(html) {\n                var contentContainer = LazyLoadList.getContentContainer(root);\n                return contentContainer.prepend(html);\n            })\n            .then(function() {\n                return incrementTotalConversationCount(root);\n            })\n            .catch(Notification.exception);\n    };\n\n    /**\n     * Delete a conversation from the list of conversations.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var deleteConversation = function(root, conversationElement) {\n        conversationElement.remove();\n        decrementTotalConversationCount(root);\n\n        var conversations = root.find(SELECTORS.CONVERSATION);\n        if (!conversations.length) {\n            // If we don't have any conversations then we need to hide\n            // the content of the list and show the empty message.\n            var listRoot = LazyLoadList.getRoot(root);\n            LazyLoadList.hideContent(listRoot);\n            LazyLoadList.showEmptyMessage(listRoot);\n        }\n    };\n\n    /**\n     * Mark a conversation as read.\n     *\n     * @param  {Object} root Overview messages container element.\n     * @param  {Object} conversationElement The conversation element.\n     */\n    var markConversationAsRead = function(root, conversationElement) {\n        var unreadCount = conversationElement.find(SELECTORS.UNREAD_COUNT);\n        unreadCount.text('0');\n        unreadCount.addClass('hidden');\n        decrementTotalUnreadConversationCount(root);\n    };\n\n    /**\n     * Listen to, and handle events in this section.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} root The section container element.\n     * @param {Function} loadCallback The callback to load items.\n     * @param {Array|null} types The conversation types for this section\n     * @param {bool} includeFavourites If this section includes favourites\n     * @param {String} fromPanel Routing argument to send if the section is loaded in message index left panel.\n     */\n    var registerEventListeners = function(namespace, root, loadCallback, types, includeFavourites, fromPanel) {\n        var listRoot = LazyLoadList.getRoot(root);\n        var conversationBelongsToThisSection = function(conversation) {\n            // Make sure the type is an int so that the index of check matches correctly.\n            var conversationType = parseInt(conversation.type, 10);\n            if (\n                // If the conversation type isn't one this section cares about then we can ignore it.\n                (types && types.indexOf(conversationType) < 0) ||\n                // If this is the favourites section and the conversation isn't a favourite then ignore it.\n                (includeFavourites && !conversation.isFavourite) ||\n                // If this section doesn't include favourites and the conversation is a favourite then ignore it.\n                (!includeFavourites && conversation.isFavourite)\n            ) {\n                return false;\n            }\n\n            return true;\n        };\n\n        // Set the minimum height of the section to the height of the toggle. This\n        // smooths out the collapse animation.\n        var toggle = root.find(SELECTORS.TOGGLE);\n        root.css('min-height', toggle.outerHeight());\n\n        root.on('show.bs.collapse', function() {\n            setExpanded(root);\n            LazyLoadList.show(listRoot, loadCallback, function(contentContainer, conversations, userId) {\n                return render(conversations, userId)\n                    .then(function(html) {\n                        contentContainer.append(html);\n                        return html;\n                    })\n                    .catch(Notification.exception);\n            });\n        });\n\n        root.on('hidden.bs.collapse', function() {\n            setCollapsed(root);\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_BLOCKED, function(userId) {\n            var conversationElement = getConversationElementFromUserId(root, userId);\n            if (conversationElement.length) {\n                blockContact(conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_UNBLOCKED, function(userId) {\n            var conversationElement = getConversationElementFromUserId(root, userId);\n\n            if (conversationElement.length) {\n                unblockContact(conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_SET_MUTED, function(conversation) {\n            var conversationId = conversation.id;\n            var conversationElement = getConversationElement(root, conversationId);\n            if (conversationElement.length) {\n                muteConversation(conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_UNSET_MUTED, function(conversation) {\n            var conversationId = conversation.id;\n            var conversationElement = getConversationElement(root, conversationId);\n            if (conversationElement.length) {\n                unmuteConversation(conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_NEW_LAST_MESSAGE, function(conversation) {\n            if (!conversationBelongsToThisSection(conversation)) {\n                return;\n            }\n\n            var loggedInUserId = conversation.loggedInUserId;\n            var conversationId = conversation.id;\n            var element = getConversationElement(root, conversationId);\n            conversation = formatConversationFromEvent(conversation);\n            if (element.length) {\n                var contentContainer = LazyLoadList.getContentContainer(root);\n                render([conversation], loggedInUserId)\n                    .then(function(html) {\n                            contentContainer.prepend(html);\n                            element.remove();\n                            return html;\n                        })\n                    .catch(Notification.exception);\n            } else {\n                createNewConversationFromEvent(root, conversation, loggedInUserId);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_DELETED, function(conversationId) {\n            var conversationElement = getConversationElement(root, conversationId);\n            delete loadedConversationsById[conversationId];\n            if (conversationElement.length) {\n                deleteConversation(root, conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_READ, function(conversationId) {\n            var conversationElement = getConversationElement(root, conversationId);\n            if (conversationElement.length) {\n                markConversationAsRead(root, conversationElement);\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_SET_FAVOURITE, function(conversation) {\n            var conversationElement = null;\n            if (conversationBelongsToThisSection(conversation)) {\n                conversationElement = getConversationElement(root, conversation.id);\n                if (!conversationElement.length) {\n                    createNewConversationFromEvent(\n                        root,\n                        formatConversationFromEvent(conversation),\n                        conversation.loggedInUserId\n                    );\n                }\n            } else {\n                conversationElement = getConversationElement(root, conversation.id);\n                if (conversationElement.length) {\n                    deleteConversation(root, conversationElement);\n                }\n            }\n        });\n\n        PubSub.subscribe(MessageDrawerEvents.CONVERSATION_UNSET_FAVOURITE, function(conversation) {\n            var conversationElement = null;\n            if (conversationBelongsToThisSection(conversation)) {\n                conversationElement = getConversationElement(root, conversation.id);\n                if (!conversationElement.length) {\n                    createNewConversationFromEvent(\n                        root,\n                        formatConversationFromEvent(conversation),\n                        conversation.loggedInUserId\n                    );\n                }\n            } else {\n                conversationElement = getConversationElement(root, conversation.id);\n                if (conversationElement.length) {\n                    deleteConversation(root, conversationElement);\n                }\n            }\n        });\n\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n        root.on(CustomEvents.events.activate, SELECTORS.CONVERSATION, function(e, data) {\n            var conversationElement = $(e.target).closest(SELECTORS.CONVERSATION);\n            var conversationId = conversationElement.attr('data-conversation-id');\n            var conversation = loadedConversationsById[conversationId];\n            MessageDrawerRouter.go(namespace, MessageDrawerRoutes.VIEW_CONVERSATION, conversation, fromPanel);\n\n            data.originalEvent.preventDefault();\n        });\n    };\n\n    /**\n     * Setup the section.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} header The header container element.\n     * @param {Object} body The section container element.\n     * @param {Object} footer The footer container element.\n     * @param {Array} types The conversation types that show in this section\n     * @param {bool} includeFavourites If this section includes favourites\n     * @param {Object} totalCountPromise Resolves wth the total conversations count\n     * @param {Object} unreadCountPromise Resolves wth the unread conversations count\n     * @param {bool} fromPanel shown in message app panel.\n     */\n    var show = function(namespace, header, body, footer, types, includeFavourites, totalCountPromise, unreadCountPromise,\n        fromPanel) {\n        var root = $(body);\n\n        if (!root.attr('data-init')) {\n            var loadCallback = getLoadCallback(types, includeFavourites, 0);\n            registerEventListeners(namespace, root, loadCallback, types, includeFavourites, fromPanel);\n\n            if (isVisible(root)) {\n                setExpanded(root);\n                var listRoot = LazyLoadList.getRoot(root);\n                LazyLoadList.show(listRoot, loadCallback, function(contentContainer, conversations, userId) {\n                    return render(conversations, userId)\n                        .then(function(html) {\n                            contentContainer.append(html);\n                            return html;\n                        })\n                        .catch(Notification.exception);\n                });\n            }\n\n            // This is given to us by the calling code because the total counts for all sections\n            // are loaded in a single ajax request rather than one request per section.\n            totalCountPromise.then(function(count) {\n                renderTotalCount(root, count);\n                loadedTotalCounts = true;\n                return;\n            })\n            .catch(function() {\n                // Silently ignore if we can't updated the counts. No need to bother the user.\n            });\n\n            // This is given to us by the calling code because the unread counts for all sections\n            // are loaded in a single ajax request rather than one request per section.\n            unreadCountPromise.then(function(count) {\n                renderUnreadCount(root, count);\n                loadedUnreadCounts = true;\n                return;\n            })\n            .catch(function() {\n                // Silently ignore if we can't updated the counts. No need to bother the user.\n            });\n\n            root.attr('data-init', true);\n        }\n    };\n\n    return {\n        show: show,\n        isVisible: isVisible\n    };\n});\n"],"file":"message_drawer_view_overview_section.min.js"}