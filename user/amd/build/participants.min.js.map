{"version":3,"sources":["../src/participants.js"],"names":["Selectors","bulkActionSelect","bulkUserCheckBoxes","bulkUserSelectedCheckBoxes","checkAllButton","stateHelpIcon","tableForm","uniqueId","init","uniqueid","noteStateNames","root","document","querySelector","getTableFromUniqueId","DynamicTableSelectors","main","fromRegionId","registerEventListeners","addEventListener","CustomEvents","events","accessibleChange","e","action","target","value","tableRoot","checkboxes","querySelectorAll","indexOf","preventDefault","ids","forEach","checkbox","push","getAttribute","replace","bulkAction","dataset","courseId","then","modal","getRoot","on","ModalEvents","hidden","bulkActionSelector","focus","catch","Notification","exception","length","form","submit","resetBulkAction","closest","showAllLink","showalllink","window","location"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Some UI stuff for participants page.\n * This is also used by the report/participants/index.php because it has the same functionality.\n *\n * @module     core_user/participants\n * @package    core_user\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {showAddNote, showSendMessage} from 'core_user/local/participants/bulkactions';\n\nconst Selectors = {\n    bulkActionSelect: \"#formactionid\",\n    bulkUserCheckBoxes: \"input.usercheckbox\",\n    bulkUserSelectedCheckBoxes: \"input.usercheckbox:checked\",\n    checkAllButton: \"#checkall\",\n    stateHelpIcon: '[data-region=\"state-help-icon\"]',\n    tableForm: uniqueId => `form[data-table-unique-id=\"${uniqueId}\"]`,\n};\n\nexport const init = ({\n    uniqueid,\n    noteStateNames = {},\n}) => {\n    const root = document.querySelector(Selectors.tableForm(uniqueid));\n    const getTableFromUniqueId = uniqueId => root.querySelector(DynamicTableSelectors.main.fromRegionId(uniqueId));\n\n    /**\n     * Private method.\n     *\n     * @method registerEventListeners\n     * @private\n     */\n    const registerEventListeners = () => {\n        root.querySelector(Selectors.bulkActionSelect).addEventListener(CustomEvents.events.accessibleChange, e => {\n            const action = e.target.value;\n            const tableRoot = getTableFromUniqueId(uniqueid);\n            const checkboxes = tableRoot.querySelectorAll(Selectors.bulkUserSelectedCheckBoxes);\n\n            if (action.indexOf('#') !== -1) {\n                e.preventDefault();\n\n                const ids = [];\n                checkboxes.forEach(checkbox => {\n                    ids.push(checkbox.getAttribute('name').replace('user', ''));\n                });\n\n                let bulkAction;\n                if (action === '#messageselect') {\n                    bulkAction = showSendMessage(ids);\n                } else if (action === '#addgroupnote') {\n                    bulkAction = showAddNote(\n                        root.dataset.courseId,\n                        ids,\n                        noteStateNames,\n                        root.querySelector(Selectors.stateHelpIcon)\n                    );\n                }\n\n                if (bulkAction) {\n                    bulkAction\n                    .then(modal => {\n                        modal.getRoot().on(ModalEvents.hidden, () => {\n                            // Focus on the action select when the dialog is closed.\n                            const bulkActionSelector = root.querySelector(Selectors.bulkActionSelect);\n                            bulkActionSelector.focus();\n                        });\n\n                        return modal;\n                    })\n                    .catch(Notification.exception);\n                }\n            } else if (action !== '' && checkboxes.length) {\n                e.target.form.submit();\n            }\n\n            resetBulkAction(e.target);\n        });\n\n        root.addEventListener('click', e => {\n            const checkAllButton = e.target.closest(Selectors.checkAllButton);\n            if (checkAllButton) {\n                const showAllLink = checkAllButton.dataset.showalllink;\n                if (showAllLink) {\n                    window.location = showAllLink;\n                }\n            }\n        });\n    };\n\n    const resetBulkAction = bulkActionSelect => {\n        bulkActionSelect.value = '';\n    };\n\n    registerEventListeners();\n};\n"],"file":"participants.min.js"}